"""
This type stub file was generated by pyright.
"""

from _typeshed import Incomplete
from collections.abc import Iterator
import datetime
from http.client import HTTPResponse
from json import JSONEncoder
from typing import Any

class FluxStructure: ...

class FluxStructureEncoder(JSONEncoder):
    def default(self, obj): ...

class FluxTable(FluxStructure):
    columns: Incomplete
    records: Incomplete
    def __init__(self) -> None: ...
    def get_group_key(self): ...
    def __iter__(self): ...

class FluxColumn(FluxStructure):
    default_value: Incomplete
    group: Incomplete
    data_type: Incomplete
    label: Incomplete
    index: Incomplete
    def __init__(
        self,
        index: Incomplete | None = ...,
        label: Incomplete | None = ...,
        data_type: Incomplete | None = ...,
        group: Incomplete | None = ...,
        default_value: Incomplete | None = ...,
    ) -> None: ...

class FluxRecord(FluxStructure):
    table: Incomplete
    values: Incomplete
    row: Incomplete
    def __init__(self, table, values: Incomplete | None = ...) -> None: ...
    def get_start(self) -> datetime.datetime: ...
    def get_stop(self) -> datetime.datetime: ...
    def get_time(self) -> datetime.datetime: ...
    def get_value(self) -> Any: ...
    def get_field(self) -> str: ...
    def get_measurement(self) -> str: ...
    def __getitem__(self, key: str) -> Any: ...
    def __setitem__(self, key: str, value: Any) -> None: ...

class TableList(list[FluxTable]):
    def to_values(self, columns: list[str] | None = ...) -> list[list[object]]: ...
    def to_json(self, columns: list[str] | None = ..., **kwargs) -> str: ...

class CSVIterator(Iterator[list[str]]):
    delegate: Incomplete
    def __init__(self, response: HTTPResponse) -> None: ...
    def __iter__(self): ...
    def __next__(self): ...
    def to_values(self) -> list[list[str]]: ...
